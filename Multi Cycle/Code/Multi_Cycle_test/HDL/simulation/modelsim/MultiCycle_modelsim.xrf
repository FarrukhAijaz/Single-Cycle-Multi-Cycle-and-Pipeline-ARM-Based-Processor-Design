vendor_name = ModelSim
source_file = 1, C:/Users/farru/OneDrive/Desktop/Multi_Cycle_test/HDL/Instructions.hex
source_file = 1, C:/Users/farru/OneDrive/Desktop/Multi_Cycle_test/HDL/ID_memory.v
source_file = 1, C:/Users/farru/OneDrive/Desktop/Multi_Cycle_test/HDL/Constant4.v
source_file = 1, C:/Users/farru/OneDrive/Desktop/Multi_Cycle_test/HDL/shifter.v
source_file = 1, C:/Users/farru/OneDrive/Desktop/Multi_Cycle_test/HDL/Register_simple.v
source_file = 1, C:/Users/farru/OneDrive/Desktop/Multi_Cycle_test/HDL/Register_rsten_neg.v
source_file = 1, C:/Users/farru/OneDrive/Desktop/Multi_Cycle_test/HDL/Register_rsten.v
source_file = 1, C:/Users/farru/OneDrive/Desktop/Multi_Cycle_test/HDL/Register_reset.v
source_file = 1, C:/Users/farru/OneDrive/Desktop/Multi_Cycle_test/HDL/Register_file.v
source_file = 1, C:/Users/farru/OneDrive/Desktop/Multi_Cycle_test/HDL/Register_en.v
source_file = 1, C:/Users/farru/OneDrive/Desktop/Multi_Cycle_test/HDL/Mux_16to1.v
source_file = 1, C:/Users/farru/OneDrive/Desktop/Multi_Cycle_test/HDL/Mux_4to1.v
source_file = 1, C:/Users/farru/OneDrive/Desktop/Multi_Cycle_test/HDL/Mux_2to1.v
source_file = 1, C:/Users/farru/OneDrive/Desktop/Multi_Cycle_test/HDL/Memory.v
source_file = 1, C:/Users/farru/OneDrive/Desktop/Multi_Cycle_test/HDL/Instruction_memory.v
source_file = 1, C:/Users/farru/OneDrive/Desktop/Multi_Cycle_test/HDL/hexto7seg.v
source_file = 1, C:/Users/farru/OneDrive/Desktop/Multi_Cycle_test/HDL/Extender.v
source_file = 1, C:/Users/farru/OneDrive/Desktop/Multi_Cycle_test/HDL/Decoder_4to16.v
source_file = 1, C:/Users/farru/OneDrive/Desktop/Multi_Cycle_test/HDL/Decoder_2to4.v
source_file = 1, C:/Users/farru/OneDrive/Desktop/Multi_Cycle_test/HDL/ALU.v
source_file = 1, C:/Users/farru/OneDrive/Desktop/Multi_Cycle_test/HDL/Adder.v
source_file = 1, C:/Users/farru/OneDrive/Desktop/Multi_Cycle_test/HDL/DataPath.v
source_file = 1, C:/Users/farru/OneDrive/Desktop/Multi_Cycle_test/HDL/Controller.v
source_file = 1, C:/Users/farru/OneDrive/Desktop/Multi_Cycle_test/HDL/Multi_Cycle_Computer.v
source_file = 1, C:/Users/farru/OneDrive/Desktop/Multi_Cycle_test/HDL/db/MultiCycle.cbx.xml
design_name = Controller
instance = comp, \PCWrite~output\, PCWrite~output, Controller, 1
instance = comp, \AdrSrc~output\, AdrSrc~output, Controller, 1
instance = comp, \MemWrite~output\, MemWrite~output, Controller, 1
instance = comp, \IRWrite~output\, IRWrite~output, Controller, 1
instance = comp, \ResultSrc[0]~output\, ResultSrc[0]~output, Controller, 1
instance = comp, \ResultSrc[1]~output\, ResultSrc[1]~output, Controller, 1
instance = comp, \ALUControl[0]~output\, ALUControl[0]~output, Controller, 1
instance = comp, \ALUControl[1]~output\, ALUControl[1]~output, Controller, 1
instance = comp, \ALUControl[2]~output\, ALUControl[2]~output, Controller, 1
instance = comp, \ALUControl[3]~output\, ALUControl[3]~output, Controller, 1
instance = comp, \ALUSrcB[0]~output\, ALUSrcB[0]~output, Controller, 1
instance = comp, \ALUSrcB[1]~output\, ALUSrcB[1]~output, Controller, 1
instance = comp, \ALUSrcA~output\, ALUSrcA~output, Controller, 1
instance = comp, \ImmSrc[0]~output\, ImmSrc[0]~output, Controller, 1
instance = comp, \ImmSrc[1]~output\, ImmSrc[1]~output, Controller, 1
instance = comp, \RegWrite~output\, RegWrite~output, Controller, 1
instance = comp, \RegSrc[0]~output\, RegSrc[0]~output, Controller, 1
instance = comp, \RegSrc[1]~output\, RegSrc[1]~output, Controller, 1
instance = comp, \BL_ctrl~output\, BL_ctrl~output, Controller, 1
instance = comp, \Rd[0]~input\, Rd[0]~input, Controller, 1
instance = comp, \clk~input\, clk~input, Controller, 1
instance = comp, \clk~inputclkctrl\, clk~inputclkctrl, Controller, 1
instance = comp, \Cond[1]~input\, Cond[1]~input, Controller, 1
instance = comp, \Cond[2]~input\, Cond[2]~input, Controller, 1
instance = comp, \Cond[3]~input\, Cond[3]~input, Controller, 1
instance = comp, \Mux0~0\, Mux0~0, Controller, 1
instance = comp, \Cond[0]~input\, Cond[0]~input, Controller, 1
instance = comp, \Funct[4]~input\, Funct[4]~input, Controller, 1
instance = comp, \Funct[3]~input\, Funct[3]~input, Controller, 1
instance = comp, \Funct[2]~input\, Funct[2]~input, Controller, 1
instance = comp, \Funct[1]~input\, Funct[1]~input, Controller, 1
instance = comp, \FlagWrite[1]~0\, FlagWrite[1]~0, Controller, 1
instance = comp, \Funct[0]~input\, Funct[0]~input, Controller, 1
instance = comp, \FlagWrite[1]~1\, FlagWrite[1]~1, Controller, 1
instance = comp, \ALUFlags[2]~input\, ALUFlags[2]~input, Controller, 1
instance = comp, \Flag_reg32|OUT[0]~0\, Flag_reg32|OUT[0]~0, Controller, 1
instance = comp, \Flag_reg32|OUT[0]\, Flag_reg32|OUT[0], Controller, 1
instance = comp, \Mux0~1\, Mux0~1, Controller, 1
instance = comp, \CondEx_Reg|OUT[0]\, CondEx_Reg|OUT[0], Controller, 1
instance = comp, \RESET~input\, RESET~input, Controller, 1
instance = comp, \Op[0]~input\, Op[0]~input, Controller, 1
instance = comp, \Op[1]~input\, Op[1]~input, Controller, 1
instance = comp, \state~17\, state~17, Controller, 1
instance = comp, \Funct[5]~input\, Funct[5]~input, Controller, 1
instance = comp, \state~28\, state~28, Controller, 1
instance = comp, \state~29\, state~29, Controller, 1
instance = comp, \state.EXECUTER\, state.EXECUTER, Controller, 1
instance = comp, \state~26\, state~26, Controller, 1
instance = comp, \state~27\, state~27, Controller, 1
instance = comp, \state.EXECUTEI\, state.EXECUTEI, Controller, 1
instance = comp, \state~21\, state~21, Controller, 1
instance = comp, \state.ALUWB\, state.ALUWB, Controller, 1
instance = comp, \state~25\, state~25, Controller, 1
instance = comp, \state.MEMADR\, state.MEMADR, Controller, 1
instance = comp, \state~22\, state~22, Controller, 1
instance = comp, \state.MEMREAD\, state.MEMREAD, Controller, 1
instance = comp, \state~20\, state~20, Controller, 1
instance = comp, \state.MEMWB\, state.MEMWB, Controller, 1
instance = comp, \state~23\, state~23, Controller, 1
instance = comp, \state.MEMWRITE\, state.MEMWRITE, Controller, 1
instance = comp, \state~18\, state~18, Controller, 1
instance = comp, \state~19\, state~19, Controller, 1
instance = comp, \state.FETCH\, state.FETCH, Controller, 1
instance = comp, \state~24\, state~24, Controller, 1
instance = comp, \state.DECODE\, state.DECODE, Controller, 1
instance = comp, \state~16\, state~16, Controller, 1
instance = comp, \state.BRANCH\, state.BRANCH, Controller, 1
instance = comp, \PCWrite~0\, PCWrite~0, Controller, 1
instance = comp, \Rd[1]~input\, Rd[1]~input, Controller, 1
instance = comp, \Rd[3]~input\, Rd[3]~input, Controller, 1
instance = comp, \Rd[2]~input\, Rd[2]~input, Controller, 1
instance = comp, \PCWrite~2\, PCWrite~2, Controller, 1
instance = comp, \PCWrite~1\, PCWrite~1, Controller, 1
instance = comp, \PCWrite~3\, PCWrite~3, Controller, 1
instance = comp, \AdrSrc~2\, AdrSrc~2, Controller, 1
instance = comp, \MemWrite~0\, MemWrite~0, Controller, 1
instance = comp, \ALUControl~0\, ALUControl~0, Controller, 1
instance = comp, \WideOr8~0\, WideOr8~0, Controller, 1
instance = comp, \WideOr7~0\, WideOr7~0, Controller, 1
instance = comp, \ALUControl~1\, ALUControl~1, Controller, 1
instance = comp, \WideOr1~0\, WideOr1~0, Controller, 1
instance = comp, \WideOr0~0\, WideOr0~0, Controller, 1
instance = comp, \Decoder1~0\, Decoder1~0, Controller, 1
instance = comp, \comb~0\, comb~0, Controller, 1
instance = comp, \RegSrc[0]$latch\, RegSrc[0]$latch, Controller, 1
instance = comp, \Decoder1~1\, Decoder1~1, Controller, 1
instance = comp, \RegSrc[1]$latch\, RegSrc[1]$latch, Controller, 1
instance = comp, \ALUFlags[0]~input\, ALUFlags[0]~input, Controller, 1
instance = comp, \ALUFlags[1]~input\, ALUFlags[1]~input, Controller, 1
instance = comp, \ALUFlags[3]~input\, ALUFlags[3]~input, Controller, 1
